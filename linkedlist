
#include <iostream>

using namespace std;
class Node{
    public:
    int val;
    Node* next;
    
    Node(int data){
        val = data;
        next = NULL;
    }
};
    void insertAthead(Node* &head, int val){
        
        Node* new_node = new Node(val);
        new_node->next = head;
        head = new_node;
    }
    void insertAttail(Node* &head, int val){
        Node* new_node= new Node(val);
        
        Node* temp = head;
        while(temp->next!=NULL){
            temp=temp->next;
            
            
        }
        temp->next = new_node;
    }
    void display(Node* head){
        Node* temp=head;
        while(temp!=NULL){
            cout<<temp->val<<"->";
            temp= temp->next;
        }
        cout<<"NULL"<<endl;
    }
    void insertalPosition(Node* &head,  int val, int pos){
        if (pos==0){
            insertAthead(head, val);
            return;
        }
        Node* new_node = new Node(val);
        Node* temp = head;
        int cur_pos = 0;
        while(cur_pos!=pos-1){
            temp=temp->next;
            cur_pos++;
        }
        new_node->next = temp->next;
        temp->next=new_node;
    }
    void updateAtPosition(Node* &head, int k, int val){
        Node* temp=head;
        int curr_pos=0;
        while(curr_pos!=k){
            temp=temp->next;
            curr_pos++;
        }
        temp->val = val;
    }
    void deeletAtHead(Node* &head){
        Node* temp= head;
        head = head->next;
        free(temp);
    }
    void deleteattail(Node* &head){
        Node* second_last = head;
        while (second_last->next->next!=NULL){
            second_last=second_last->next;
        }
        Node* temp = second_last->next;
        second_last->next= NULL;
        free(temp);
    }
    
    void deleteatPosition(Node* &head, int pos){
        if(pos==0){
            deeletAtHead(head);
            return;
        } 
        int curr_pos=0;
        Node* prev = head;
        while(curr_pos!=pos-1){
            prev = prev->next;
            curr_pos++;
        }
        Node* temp= prev->next;
        prev->next= prev->next->next;
        free(temp);
    }



int main()
{   
    Node* head = NULL;
    //cout<<n->val<<" "<<n->next<<endl;
    insertAthead(head, 2);
    display(head);
    insertAthead(head, 1);
    display(head);
    insertAttail(head, 3);
    display(head);
    insertalPosition(head, 4, 1);
    display(head);
    updateAtPosition(head, 2,5);
    display(head);
    //deeletAtHead(head);
    //display(head);
    //deleteattail(head);
    //display(head);
    deleteatPosition(head, 3);
    display(head);
    return 0;
}
