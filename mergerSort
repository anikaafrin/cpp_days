#include <iostream>
#include <vector> 
#include <cstring>
using namespace std ;
void merge(int arr[], int l, int mid, int r){
    int an = mid-l+1;
    int bn=r-mid;
    
    int left[an];
    int right[bn];
    
    for(int i=0; i<an; i++){
        left[i] = arr[l+i];
    }
    for(int j=0; j<bn; j++){
        right[j] = arr[mid+1+j];
    } 
    
    int i=0;
    int j=0;
    int k=l;
    while(i<an && j<bn){
        if (left[i]<right[j]){
            arr[k++] = left[i++];
        }
        else{
            arr[k++]=right[j++];
        }
        
    }
    while(i<an){
        arr[k++]=left[i++];
    }
    while(j<bn){
        arr[k++]=right[j++];
    }
    
    
    
    
}

void mergeSort(int arr[], int l, int r){
    //base case 
    if(l>=r){
        return ;
    }
    
    int mid = (l+r)/2;
    mergeSort(arr, l, mid);
    mergeSort(arr, mid+1, r);
    merge(arr, l, mid, r);
    
    
    return;
}
int main(){
    int arr[]={10, 28, 24, 6, 34, 18, 38, 44};
    int n= sizeof(arr)/sizeof(arr[0]);
    mergeSort(arr,0, n-1 ) ;
    for (int i=0; i<n; i++){
        cout<<arr[i]<<" ";
    }cout<<endl;
    return 0;
    
}



